# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.33.1"

default_platform :ios

def sign_app
  increment_build_number

  udid = sigh(app_identifier: "no.hyper.thyme.watchkitapp.watchkitextension", force: true, output_path: "/tmp")
  ENV["WATCHKIT_EXTENSIONS_UDID"] = udid

  udid = sigh(app_identifier: "no.hyper.thyme.watchkitapp", force: true, output_path: "/tmp")
  ENV["WATCHKIT_APP_UDID"] = udid

  udid = sigh(app_identifier: "no.hyper.thyme", force: true, output_path: "/tmp")
  ENV["PROJECT_UDID"] = udid
end

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    cocoapods
    sign_app

    # xctool # run the tests of your app
  end

  require 'faraday'
  Faraday::Utils.default_params_encoder = Faraday::FlatParamsEncoder

  desc "Runs all the tests"
    lane :test do
  end

  desc "Submit a new Beta Build to Fabric"
  lane :fabric do
    sigh(adhoc: true, force: true)
    gym(scheme: "Thyme", verbose: true, clean: true, use_legacy_build_api: true)
    crashlytics(
    crashlytics_path: './Pods/Crashlytics/Crashlytics.framework',
    api_token: '67ffdb78ce9cd50af8404c244fa25df01ea2b5bc',
    build_secret: '20cddd5b881ce36bfe855addd58d8d01aa2755c9bfa2c91515de7457a65d8d82',
    groups: 'hyper-ios'
    )
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :testflight do
    gym(scheme: "Thyme", verbose: true, clean: true, use_legacy_build_api: true)
    pilot()

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the App Store"
  lane :deploy do
    gym(scheme: "Thyme", verbose: true, clean: true, use_legacy_build_api: true)
    deliver
  end
end


# More information about multiple platforms in fastlane:
# https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
